[{"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\index.js":"1","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\reportWebVitals.js":"2","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\App.js":"3","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\Home\\Home.js":"5","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\Dashboard\\Dashboard.js":"6","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\CopyMove\\CopyMove.js":"7","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\Notification\\Notification.js":"8"},{"size":597,"mtime":1610433110437,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":944,"mtime":1611913785178,"results":"12","hashOfConfig":"10"},{"size":2039,"mtime":1610531286825,"results":"13","hashOfConfig":"10"},{"size":31322,"mtime":1612418265859,"results":"14","hashOfConfig":"10"},{"size":176,"mtime":1610516623618,"results":"15","hashOfConfig":"10"},{"size":6605,"mtime":1612174896732,"results":"16","hashOfConfig":"10"},{"size":2676,"mtime":1612176210929,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"l51yk8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\index.js",[],["39","40"],"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\reportWebVitals.js",[],"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\App.js",[],"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Navbar\\Navbar.js",["41","42"],"import React from 'react';\r\nimport './Navbar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faMagnet } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport function Navbar() {\r\n    return (<div>\r\n        <nav className=\"row navbar navbar-expand-lg navbar-absolute fixed-top bgwhite\" id=\"navbar\" style={{ display: \"block\", zIndex: '10' }}>\r\n            <div className=\"container-fluid mr-2 ml-2 row\">\r\n                <img style={{ width: \"160px!important\" }} src=\"https://mindtree.com/themes/custom/mindtree_theme/mindtree-lnt-logo-png.png\" alt=\"mindtree logo\" />\r\n                <div className=\"btn-group\">\r\n                    <div className=\"nav-item\">\r\n                        <a data-toggle=\"dropdown\" role=\"button\" name=\"HomeButton\" className=\"nav-link pr-3 pl-3 color cursor\">\r\n                            Hello, User\r\n                    </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right marginForBox activeMenu mt-1\"\r\n                            style={{ marginTop: '-20px' }} id='homeMenu' aria-labelledby=\"navbarDropdownMenuLink\">\r\n                            <a className=\"dropdown-item\" name=\"dashboard\">Log Out</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n        <div className=\"navbar navbar-inverse navbar-fixed-left\">\r\n            <ul className=\"ml-auto mr-auto\">\r\n                <li>\r\n                    <Link to=\"/\" className=\"item\">\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                        <p className=\"font-label\">Home</p>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/dashboard\" className=\"item\" >\r\n                        <FontAwesomeIcon icon={faMagnet} />\r\n                        <p className=\"font-label\">Dash</p>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\Home\\Home.js",["43","44","45","46","47","48","49"],"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\Dashboard\\Dashboard.js",[],"C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\CopyMove\\CopyMove.js",["50","51"],"import { faChevronRight, faFile, faFileExcel, faFilePdf, faFileWord, faFolderOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './CopyMove.css';\r\n\r\nexport function CopyMove(props) {\r\n    const [data, setData] = useState([]);\r\n    const [breadCrumb, setBreadCrumb] = useState([]);\r\n    let tenant = \"c57abc28-4aad-11eb-b378-0242ac130002\";\r\n    let parent = \"\";\r\n\r\n    const CACHE = props.folder;\r\n\r\n    const columns = [\r\n        {\r\n            field: 'name', headerName: 'Name', width: 600,\r\n            cellClassName: 'cursor',\r\n            renderCell: (params) => {\r\n                return <span id={params.row.id + \"-parent\"}><FontAwesomeIcon icon={getIcon(params.row.fileType !== null ? params.row.fileType : params.row.type)} className={(params.row.fileType !== null ? params.row.fileType : params.row.type) + \" mr-3\"}></FontAwesomeIcon>\r\n                    <span id={params.row.id} className=\"padding\">{params.value}</span></span>\r\n            },\r\n        },\r\n        {\r\n            field: 'lastModifiedOn', headerName: 'Modified', width: 200,\r\n            renderCell: (params) => {\r\n                let date = null\r\n                if (params.value.indexOf(\"GMT\") === -1) {\r\n                    date = new Date(Date.parse(params.value + \"z\"))\r\n                } else {\r\n                    date = new Date(Date.parse(params.value))\r\n                }\r\n                return <span>{date.toLocaleString()}</span>\r\n            },\r\n        },\r\n        { field: 'lastModifiedBy', headerName: 'Modified By', type: 'date', width: 200 },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        fetchRootData();\r\n    }, [])\r\n\r\n    function getIcon(type) {\r\n        switch (type) {\r\n            case 'doc': return faFileWord;\r\n            case 'pdf': return faFilePdf;\r\n            case 'xls': return faFileExcel;\r\n            case 'Folder': return faFolderOpen;\r\n            default: return faFile;\r\n        }\r\n    }\r\n\r\n    function cell(data) {\r\n        parent = data.row.id;\r\n        if (breadCrumb.findIndex(_ => _.id === parent) === -1) {\r\n            breadCrumb.push({ name: data.row.name, id: parent })\r\n            setBreadCrumb(breadCrumb);\r\n        }\r\n        console.log(breadCrumb)\r\n        props.update(data.row);\r\n        fetchData()\r\n    }\r\n\r\n    function fetchRootData() {\r\n        fetch('https://localhost:44326/' + tenant)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    parent = result.parent;\r\n                    let folders = result.items;\r\n                    folders.sort((a, b) => {\r\n                        if (a.type === b.type) {\r\n                            if (a.name > b.name) {\r\n                                return 1\r\n                            } else {\r\n                                return -1;\r\n                            }\r\n                        } else if (a.type === \"Folder\") {\r\n                            return -1;\r\n                        }\r\n                        else {\r\n                            return 1;\r\n                        }\r\n                    })\r\n                    breadCrumb.push({ name: \"Root Folder\", id: parent })\r\n                    props.update({ id: parent });\r\n                    setData(folders);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    function fetchData() {\r\n        if (CACHE[parent] !== undefined) {\r\n            setData(CACHE[parent])\r\n        } else {\r\n            fetch('https://localhost:44326/' + tenant + \"/\" + parent)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        parent = result.parent;\r\n                        let folders = result.items;\r\n                        folders.sort((a, b) => {\r\n                            if (a.type === b.type) {\r\n                                if (a.name > b.name) {\r\n                                    return 1\r\n                                } else {\r\n                                    return -1;\r\n                                }\r\n                            } else if (a.type === \"Folder\") {\r\n                                return -1;\r\n                            }\r\n                            else {\r\n                                return 1;\r\n                            }\r\n                        })\r\n                        setData(folders);\r\n                    },\r\n                    // Note: it's important to handle errors here\r\n                    // instead of a catch() block so that we don't swallow\r\n                    // exceptions from actual bugs in components.\r\n                    (error) => {\r\n                        console.log(error);\r\n                    });\r\n        }\r\n    }\r\n\r\n    function navigate(folderId) {\r\n        parent = folderId;\r\n        const index = breadCrumb.findIndex(_ => _.id === parent);\r\n        if (index > -1) {\r\n            breadCrumb.splice(index + 1, breadCrumb.length - (index + 1));\r\n        }\r\n        props.update(data.find(_ => _.folderId === folderId));\r\n        fetchData();\r\n    }\r\n\r\n    return (<div>\r\n        <div className=\"row folder\">\r\n            <div className=\"mr-auto\">\r\n                <ol className=\"breadcrumb\">\r\n                    {console.log(breadCrumb)}\r\n                    {breadCrumb.map((folder, index) => (\r\n                        <li key={index} className=\"breadcrumb-item\" >\r\n                            <a className=\"black-text\" onClick={() => navigate(folder.id)}>{folder.name}</a>\r\n                            {index !== (folder.length - 1) ?\r\n                                <FontAwesomeIcon\r\n                                    icon={faChevronRight}\r\n                                    className=\"arrow\"\r\n                                ></FontAwesomeIcon> : null\r\n                            }\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-sm-12 col-md-12 col-lg-12 mt-2\" style={{ height: '50vh', width: '100%' }}>\r\n            <DataGrid rows={data} columns={columns} pageSize={10} autoHeight=\"true\" hideFooterSelectedRowCount=\"true\" onCellClick={cell} />\r\n        </div>\r\n    </div>)\r\n}","C:\\Users\\M1056247\\Desktop\\Micro-2 UI\\file-manager-react\\src\\components\\Featured\\Notification\\Notification.js",["52","53"],"import { HubConnectionBuilder } from '@microsoft/signalr';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Notification.css';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nexport function Notification(props) {\r\n\r\n    // React.useEffect(() => {\r\n    //     const timer = setInterval(() => {\r\n    //         setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n    //     }, 800);\r\n    //     return () => {\r\n    //         clearInterval(timer);\r\n    //     };\r\n    // }, []);\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const [connection, setConnection] = useState(null);\r\n    const [chat, setChat] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newConnection = new HubConnectionBuilder()\r\n            .withUrl('https://localhost:44326/DMS/')\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        setConnection(newConnection);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setProgress(props.progress);\r\n    }, [props.progress])\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.start()\r\n                .then(result => {\r\n                    console.log('Connected!');\r\n\r\n                    connection.on('ReceiveMessage', message => {\r\n\r\n                        setChat(\"Me\");\r\n                    });\r\n                })\r\n                .catch(e => console.log('Connection failed: ', e));\r\n        }\r\n    }, [connection]);\r\n\r\n    function getConnectionId() {\r\n        return connection.connectionId;\r\n    }\r\n\r\n    return (<div className=\"card main\">\r\n        <div className=\"card-body\">\r\n            <div className=\"row progress-header text-muted\">\r\n                {props.title}\r\n            </div>\r\n            <div className=\"row body-content\" style={{ width: '100%' }}>\r\n                <LinearProgressWithLabel value={progress} />\r\n            </div>\r\n            <div className=\"row body-content\" style={{ width: '100%',height:'20px' }}>\r\n                <button className=\"btn btn-danger mt-2 mr-auto ml-auto\" onClick={props.cancelOperation}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"200px\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":14,"column":25,"nodeType":"62","endLine":14,"endColumn":127},{"ruleId":"60","severity":1,"message":"61","line":19,"column":29,"nodeType":"62","endLine":19,"endColumn":75},{"ruleId":"63","severity":1,"message":"64","line":12,"column":20,"nodeType":"65","messageId":"66","endLine":12,"endColumn":33},{"ruleId":"63","severity":1,"message":"67","line":13,"column":8,"nodeType":"65","messageId":"66","endLine":13,"endColumn":10},{"ruleId":"63","severity":1,"message":"68","line":49,"column":5,"nodeType":"65","messageId":"66","endLine":49,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":723,"column":29,"nodeType":"62","endLine":723,"endColumn":91},{"ruleId":"60","severity":1,"message":"69","line":735,"column":17,"nodeType":"62","endLine":735,"endColumn":52},{"ruleId":"60","severity":1,"message":"61","line":742,"column":17,"nodeType":"62","endLine":742,"endColumn":74},{"ruleId":"60","severity":1,"message":"61","line":745,"column":17,"nodeType":"62","endLine":745,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":42,"column":8,"nodeType":"72","endLine":42,"endColumn":10,"suggestions":"73"},{"ruleId":"60","severity":1,"message":"61","line":150,"column":29,"nodeType":"62","endLine":150,"endColumn":91},{"ruleId":"63","severity":1,"message":"74","line":20,"column":12,"nodeType":"65","messageId":"66","endLine":20,"endColumn":16},{"ruleId":"63","severity":1,"message":"75","line":50,"column":14,"nodeType":"65","messageId":"66","endLine":50,"endColumn":29},{"ruleId":"56","replacedBy":"76"},{"ruleId":"58","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'base64_decode' is defined but never used.","Identifier","unusedVar","'S3' is defined but never used.","'tokenTimerSeconds' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRootData'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'chat' is assigned a value but never used.","'getConnectionId' is defined but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [fetchRootData]",{"range":"83","text":"84"},[1787,1789],"[fetchRootData]"]